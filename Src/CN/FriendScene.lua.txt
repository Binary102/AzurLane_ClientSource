slot0 = class("FriendScene", import("..base.BaseUI"))

slot0.getUIName = function (slot0)
	return "FriendUI"
end

slot1 = 1
slot2 = 2
slot3 = 3
slot4 = 4
slot5 = 10
slot6 = {
	i18n("friend_info_page_tip"),
	i18n("friend_search_page_tip", 30),
	i18n("friend_request_page_tip", 30),
	""
}

slot0.setFriendVOs = function (slot0, slot1)
	slot0.friendVOs = slot1
end

slot0.setPlayer = function (slot0, slot1)
	slot0.playerVO = slot1
end

slot0.setShipVOs = function (slot0, slot1)
	slot0.shipVOs = slot1
end

slot0.setRequests = function (slot0, slot1)
	slot0.requestVOs = slot1
end

slot0.setBlackList = function (slot0, slot1)
	if slot1 then
		slot0.blackVOs = {}
		slot2 = pairs
		slot3 = slot1 or {}

		for slot5, slot6 in slot2(slot3) do
			table.insert(slot0.blackVOs, slot6)
		end
	end
end

slot0.init = function (slot0)
	slot0.togglesTF = slot0:findTF("left_length/toggles")
	slot0.addPanel = slot0:findTF("add_panel")
	slot0.requestPanel = slot0:findTF("request_panel")
	slot0.friendPanel = slot0:findTF("friend_panel")
	slot0.requestTopTF = slot0:findTF("request_view_top")
	slot0.friendTopTF = slot0:findTF("friend_view_top")
	slot0.friendCountTF = slot0:findTF("friend_count/Text", slot0.friendTopTF)
	slot0.friendIndexBtn = slot0:findTF("index_button", slot0.friendTopTF)
	slot0.friendSortBtn = slot0:findTF("sort_button", slot0.friendTopTF)
	slot0.sortImgAsc = slot0:findTF("asc", slot0.friendSortBtn)
	slot0.sortImgDec = slot0:findTF("desc", slot0.friendSortBtn)
	slot0.refuseAllBtn = slot0:findTF("refuse_all_btn", slot0.requestTopTF)
	slot0.searchPanel = slot0:findTF("search_panel", slot0.addPanel)
	slot0.searchBar = slot0:findTF("InputField", slot0.searchPanel)
	slot0.sortPanel = slot0:findTF("friend_sort_panel")
	slot0.tipTF = slot0:findTF("line_tip/Text")
	slot0.blackListPanel = slot0:findTF("blacklist_panel")
	slot0.blacklistTopTF = slot0:findTF("blacklist_view_top")
	slot0.backListCount = slot0:findTF("friend_count/Text", slot0.blacklistTopTF):GetComponent(typeof(Text))
	slot0.dec = false
	slot0.sortdata = {}
	slot0.toggles = {}

	for slot4 = 1, slot0.togglesTF.childCount, 1 do
		slot0.toggles[slot4] = slot0.togglesTF:GetChild(slot4 - 1)

		onToggle(slot0, slot0.toggles[slot4], function (slot0)
			if slot0 then
				slot0:switchPage(slot0.switchPage)
			end
		end, SFX_PANEL)
	end

	slot0.chatTipContainer = slot0.toggles[1]:Find("count")
	slot0.chatTip = slot0.toggles[1]:Find("count/Text"):GetComponent(typeof(Text))
	slot0._topPanel = slot0:findTF("top")
	slot0._leftLength = slot0:findTF("left_length")
	slot0._scrllPanel = slot0:findTF("friend_panel/view")
end

slot0.uiStartAnimating = function (slot0)
	setAnchoredPosition(slot0._topPanel, {
		y = slot0._topPanel.transform.rect.height
	})
	setAnchoredPosition(slot0._leftLength, {
		x = -1 * slot0._leftLength.rect.width
	})
	setAnchoredPosition(slot0._scrllPanel, {
		x = slot0._scrllPanel.transform.localPosition.x + 1280
	})
	shiftPanel(slot0._topPanel, nil, 0, slot2, slot1, true, true)
	shiftPanel(slot0._leftLength, 0, nil, slot2, slot1, true, true)
	shiftPanel(slot0._scrllPanel, slot3, nil, slot2, slot1, true, true, nil, function ()
		slot0:dispatchUILoaded(true)
	end)

	slot0.tweens = topAnimation(slot0:findTF("bg/left", slot0._topPanel), slot0:findTF("bg/right", slot0._topPanel), slot0:findTF("bg/title", slot0._topPanel), slot0:findTF("bg/chara", slot0._topPanel), nil, function ()
		slot0.tweens = nil
	end)
end

slot0.uiExitAnimating = function (slot0)
	shiftPanel(slot0._topPanel, nil, slot0._topPanel.transform.rect.height, slot2, slot1, true, true)
	shiftPanel(slot0._leftLength, -1 * slot0._leftLength.rect.width, nil, slot2, slot1, true, true)
	shiftPanel(slot0._scrllPanel, slot0._scrllPanel.transform.localPosition.x + 1280, nil, 0.3, 0, true, true)
end

slot0.didEnter = function (slot0)
	slot0:uiStartAnimating()
	onButton(slot0, slot0:findTF("top/back"), function ()
		slot0:uiExitAnimating()
		slot0.uiExitAnimating:emit(slot1.ON_BACK, nil, 0.2)
	end, SOUND_BACK)
	onButton(slot0, slot0.refuseAllBtn, function ()
		slot0:emit(FriendMediator.REFUSE_ALL_REQUEST)
	end, SFX_PANEL)
	onButton(slot0, slot0.friendIndexBtn, function ()
		slot0:openFriendsSortPanel()
	end, SFX_PANEL)
	onButton(slot0, slot0.friendSortBtn, function ()
		slot0.dec = not slot0.dec
		slot0.contextData.sortData = {
			data = slot0.sortdata,
			dec = slot0.dec
		}

		slot0.contextData:sortFriends()
	end, SFX_PANEL)
	onButton(slot0, findTF(slot0.searchPanel, "copy_btn"), function ()
		UniPasteBoard.SetClipBoardString(slot0.playerVO.id)
		pg.TipsMgr:GetInstance():ShowTips(i18n("friend_id_copy_ok"))
	end)
	onButton(slot0, findTF(slot0.searchPanel, "search_btn"), function ()
		if slot0.waitTimer and slot0.waitTimer - slot0 > 0 then
			pg.TipsMgr:GetInstance():ShowTips(i18n("friend_searchFriend_wait_time", slot0.waitTimer - slot0))

			return
		end

		slot0.waitTimer = slot0 + slot1

		if not getInputText(slot0.searchBar) or slot1 == "" then
			pg.TipsMgr:GetInstance():ShowTips(i18n("friend_inpout_key_tip"))

			return
		end

		slot0.keyWord = slot1

		slot0:emit(FriendMediator.SEARCH_FRIEND, 3, slot1)
	end)
	onButton(slot0, findTF(slot0.searchPanel, "refresh_btn"), function ()
		if slot0.waitTimer1 and slot0.waitTimer1 - slot0 > 0 then
			pg.TipsMgr:GetInstance():ShowTips(i18n("friend_searchFriend_wait_time", slot0.waitTimer1 - slot0))

			return
		end

		slot0.waitTimer1 = slot0 + slot1

		slot0:emit(FriendMediator.SEARCH_FRIEND, 1, slot0.keyWord)
	end)
	triggerToggle(slot0.toggles[slot0.contextData.initPage or 1], true)
	slot0:updateRequestTip()
end

slot0.updateRequestTip = function (slot0)
	setActive(slot0.toggles[3]:Find("tip"), #slot0.requestVOs > 0)
end

slot0.switchPage = function (slot0, slot1)
	setActive(slot0.addPanel, slot0 == slot1)
	setActive(slot0.requestPanel, slot1 == slot1)
	setActive(slot0.friendPanel, setActive == slot1)
	setActive(slot0.requestTopTF, slot1 == slot1)
	setActive(slot0.friendTopTF, setActive == slot1)
	setActive(slot0.friendTopTF, slot1 == slot0.blackListPanel)
	setActive(slot0.friendTopTF, slot1 == slot0.blacklistTopTF)

	if slot1 == slot2 and not slot0.isInitFriend then
		slot0:initFriendsPage()
	elseif slot1 == slot0 and not slot0.isInitAdd then
		slot0:emit(FriendMediator.SEARCH_FRIEND, 1)
		slot0:initAddPage()
	elseif slot1 == slot1 and not slot0.isInitRequest then
		slot0:isInitRequestPage()
	elseif slot1 == slot3 and not slot0.isInitBlackList then
		slot0:initBlackList()
	end

	setText(slot0.tipTF, slot4[slot1])
end

slot0.initFriendsPage = function (slot0)
	slot0.isInitFriend = true
	slot0.friendItems = {}
	slot0.friendRect = slot0.friendPanel:Find("view"):GetComponent("LScrollRect")

	slot0.friendRect.onInitItem = function (slot0)
		slot0:onInitFriend(slot0)
	end

	slot0.friendRect.onUpdateItem = function (slot0, slot1)
		slot0:onUpdateFriend(slot0, slot1)
	end

	slot0:updateFriendCount()
	slot0:initFriendsSortPanel()
end

slot0.addFriendVO = function (slot0, slot1)
	table.insert(slot0.friendVOs, slot1)
	slot0:sortFriends()
	slot0:updateFriendCount()
end

slot0.updateFriendVO = function (slot0, slot1)
	for slot5, slot6 in pairs(slot0.friendVOs) do
		if slot6.id == slot1.id then
			slot0.friendVOs[slot5] = slot1

			break
		end
	end

	slot0:sortFriends()
end

slot0.deleteFriendVO = function (slot0, slot1)
	for slot5, slot6 in ipairs(slot0.friendVOs) do
		if slot6.id == slot1.id then
			table.remove(slot0.friendVOs, slot5)

			break
		end
	end

	slot0:sortFriends()
	slot0:updateFriendCount()
end

slot0.updateFriendCount = function (slot0)
	setText(slot0.friendCountTF, #slot0.friendVOs .. "/" .. MAX_FRIEND_COUNT)
end

slot7 = 1
slot8 = 2
slot9 = 3

slot0.createFriendItem = function (slot0, slot1, slot2)
	function slot4(slot0)
		slot0.nameTF.text = slot0.name
		slot0.levelTF.text = slot0.level

		LoadSpriteAsync("qicon/" .. slot0:getPainting(), function (slot0)
			slot0.iconTF.sprite = slot0
		end)
		setActive(slot0.propose, slot0.propose)

		if pg.ship_data_statistics[slot0.icon] then
			for slot6 = slot0.starsTF.childCount, slot1.star - 1, 1 do
				cloneTplTo(slot0.starTF, slot0.starsTF)
			end

			for slot6 = 1, slot2, 1 do
				setActive(slot0.starsTF:GetChild(slot6 - 1), slot6 <= slot1.star)
			end
		else
			removeAllChildren(slot0.starsTF)
		end

		onButton(slot1, slot0.resumeBtn, function ()
			slot0:emit(FriendMediator.OPEN_RESUME, slot1.id)
		end, SFX_PANEL)
	end

	if slot0 == slot2 then
		slot3.acceptBtn = slot3.tf:Find("accpet_btn")
		slot3.refuseBtn = slot3.tf:Find("refuse_btn")
		slot3.date = slot3.tf:Find("date"):GetComponent(typeof(Text))

		slot3.update = function (slot0, slot1, slot2, slot3)
			slot0.friendVO = slot1

			slot0(slot1)

			slot1.manifestoTF.text = slot3
			slot1.date.text = pg.TimeMgr.GetInstance():DescTime(slot2)
		end
	elseif slot1 == slot2 then
		slot3.addBtn = slot3.tf:Find("add_btn")

		slot3.update = function (slot0, slot1)
			slot0.friendVO = slot1

			slot0(slot1)

			slot1.manifestoTF.text = slot1.manifesto or ""
		end
	elseif slot2 == slot2 then
		slot3.occuptBtn = slot3.tf:Find("btns/occupy_btn")
		slot3.deleteBtn = slot3.tf:Find("btns/delete_btn")
		slot3.backYardBtn = slot3.tf:Find("btns/backyard_btn")
		slot3.chatTip = slot3.tf:Find("btns/occupy_btn/tip")
		slot3.date = slot3.tf:Find("date"):GetComponent(typeof(Text))

		slot3.update = function (slot0, slot1)
			slot0.friendVO = slot1

			slot0(slot1)
			setActive(slot1.chatTip, slot1.unreadCount > 0)

			slot1.manifestoTF.text = slot1.manifesto or ""

			if slot1.online == Friend.ONLINE then
				slot1.date.text = i18n("word_online")
			else
				slot1.date.text = getOfflineTimeStamp(slot1.preOnLineTime)
			end
		end
	end

	return slot3
end

slot0.onInitFriend = function (slot0, slot1)
	slot2 = slot0:createFriendItem(slot1, slot0)

	onButton(slot0, slot2.occuptBtn, function ()
		slot0:emit(FriendMediator.OPEN_CHATROOM, slot1.friendVO)
	end, SFX_PANEL)
	onButton(slot0, slot2.deleteBtn, function ()
		pg.MsgboxMgr.GetInstance():ShowMsgBox({
			content = i18n("remove_friend_tip"),
			onYes = function ()
				slot0:emit(FriendMediator.DELETE_FRIEND, slot1.friendVO.id)
			end
		})
	end, SFX_PANEL)
	onButton(slot0, slot2.backYardBtn, function ()
		slot0:emit(FriendMediator.VISIT_BACKYARD, slot1.friendVO.id)
	end, SFX_PANEL)

	slot0.friendItems[slot1] = slot2
end

slot0.onUpdateFriend = function (slot0, slot1, slot2)
	if not slot0.friendItems[slot2] then
		slot0:onInitFriend(slot2)

		slot3 = slot0.friendItems[slot2]
	end

	slot3:update(slot0.friendVOs[slot1 + 1])
end

slot0.sortFriends = function (slot0)
	if slot0.contextData.sortData then
		slot0.contextData.sortData.data.func(slot0.friendVOs, slot0.dec)
		setImageSprite(slot0:findTF("Image", slot0.friendIndexBtn), GetSpriteFromAtlas("ui/friendsui_atlas", slot0.contextData.sortData.data.spr .. "_selected"), true)
		setActive(slot0.sortImgAsc, slot0.dec)
		setActive(slot0.sortImgDec, not slot0.dec)
	end

	slot0.friendRect:SetTotalCount(#slot0.friendVOs, -1)
end

slot0.initFriendsSortPanel = function (slot0)
	slot2 = slot0:getTpl("tpl", slot1)
	slot0.friendSortCfg = require("view.main.FriendSortCfg")

	for slot6, slot7 in ipairs(slot0.friendSortCfg.SORT_TAG) do
		slot8 = cloneTplTo(slot2, slot1)
		slot9 = slot8:Find("arr")

		setImageSprite(slot8:Find("Image"), GetSpriteFromAtlas("ui/friendsui_atlas", slot7.spr), true)
		onToggle(slot0, slot8, function (slot0)
			if slot0 then
				slot0.sortdata = slot0
				slot0.contextData.sortData = {
					data = slot0.sortdata,
					dec = slot0.dec
				}

				slot0:sortFriends()
				triggerButton(slot0.sortPanel)
			end
		end, SFX_PANEL)

		if slot6 == 1 then
			triggerToggle(slot8, true)
		end
	end

	onButton(slot0, slot0.sortPanel, function ()
		slot0:closeFriendsSortPanel()
	end, SFX_PANEL)
end

slot0.openFriendsSortPanel = function (slot0)
	setActive(slot0.sortPanel, true)
end

slot0.closeFriendsSortPanel = function (slot0)
	setActive(slot0.sortPanel, false)
end

slot0.initAddPage = function (slot0)
	slot0.isInitAdd = true
	slot0.searchFriendVOs = {}
	slot0.searchItems = {}

	setText(slot0:findTF("self_id_bg/Text", slot0.searchPanel), slot0.playerVO.id)

	slot0.addRect = slot0.addPanel:Find("view"):GetComponent("LScrollRect")

	slot0.addRect.onInitItem = function (slot0)
		slot0:onInitSearch(slot0)
	end

	slot0.addRect.onUpdateItem = function (slot0, slot1)
		slot0:onUpdateSearch(slot0, slot1)
	end
end

slot0.onInitSearch = function (slot0, slot1)
	onButton(slot0, slot0:createFriendItem(slot1, slot0).addBtn, function ()
		pg.MsgboxMgr.GetInstance():ShowInputBox({
			onNo = true,
			yesText = "text_apply",
			placeholder = i18n("friend_request_msg_placeholder"),
			title = i18n("friend_request_msg_title"),
			onYes = function (slot0)
				slot0:emit(FriendMediator.ADD_FRIEND, slot1.friendVO.id, slot0)
			end
		})
	end, SFX_PANEL)

	slot0.searchItems[slot1] = slot0.createFriendItem(slot1, slot0)
end

slot0.onUpdateSearch = function (slot0, slot1, slot2)
	if not slot0.searchItems[slot2] then
		slot0:onInitSearch(slot2)

		slot3 = slot0.searchItems[slot2]
	end

	slot3:update(slot0.searchFriendVOs[slot1 + 1])
end

slot0.updateSearchResult = function (slot0, slot1)
	slot0.searchFriendVOs = slot1

	slot0.addRect:SetTotalCount(#slot1, -1)
end

slot0.isInitRequestPage = function (slot0)
	slot0.isInitRequest = true
	slot0.requestItems = {}
	slot0.requestRect = slot0.requestPanel:Find("view"):GetComponent("LScrollRect")

	slot0.requestRect.onInitItem = function (slot0)
		slot0:onInitRequest(slot0)
	end

	slot0.requestRect.onUpdateItem = function (slot0, slot1)
		slot0:onUpdateRequest(slot0, slot1)
	end

	slot0:updateRequestCount()
end

slot0.deleteRequestVO = function (slot0, slot1)
	for slot5, slot6 in ipairs(slot0.requestVOs) do
		if slot6.player.id == slot1.player.id then
			table.remove(slot0.requestVOs, slot5)

			break
		end
	end

	slot0:updateRequestCount()
end

slot0.addRequestVO = function (slot0, slot1)
	table.insert(slot0.requestVOs, slot1)
	slot0:updateRequestCount()
end

slot0.updateRequestCount = function (slot0)
	slot0:updateRequestTip()

	if slot0.isInitRequest then
		slot0.requestRect:SetTotalCount(#slot0.requestVOs, -1)
	end
end

slot0.onInitRequest = function (slot0, slot1)
	slot2 = slot0:createFriendItem(slot1, slot0)

	onButton(slot0, slot2.acceptBtn, function ()
		if slot0.friendVO then
			slot1:emit(FriendMediator.ACCEPT_REQUEST, slot0.friendVO.id)
		end
	end, SFX_PANEL)
	onButton(slot0, slot2.refuseBtn, function ()
		if slot0.friendVO then
			slot1:emit(FriendMediator.REFUSE_REQUEST, slot0.friendVO.id)
		end
	end)

	slot0.requestItems[slot1] = slot2
end

slot0.onUpdateRequest = function (slot0, slot1, slot2)
	if not slot0.requestItems[slot2] then
		slot0:onInitRequest(slot2)

		slot3 = slot0.requestItems[slot2]
	end

	slot3:update(slot0.requestVOs[slot1 + 1].player, slot0.requestVOs[slot1 + 1].timestamp, slot0.requestVOs[slot1 + 1].content)
end

slot0.initBlackList = function (slot0)
	if slot0.blackVOs == nil then
		slot0:emit(FriendMediator.GET_BLACK_LIST)
	end

	slot0.isInitBlackList = true
	slot0.blackItems = {}
	slot0.blackRect = slot0.blackListPanel:Find("view"):GetComponent("LScrollRect")

	slot0.blackRect.onInitItem = function (slot0)
		slot0:initBlackListItem(slot0)
	end

	slot0.blackRect.onUpdateItem = function (slot0, slot1)
		slot0:updateBlackListItem(slot0, slot1)
	end

	if slot0.blackVOs then
		slot0:sortBlackList()
	end
end

slot0.createBlackItem = function (slot0, slot1)
	return {
		go = slot1,
		tr = tf(slot1),
		name = ()["tr"]:Find("request_info/name"):GetComponent(typeof(Text)),
		level = ()["tr"]:Find("request_info/lv_bg/lv/Text"):GetComponent(typeof(Text)),
		manifesto = ()["tr"]:Find("request_content/bg/Text"):GetComponent(typeof(Text)),
		iconTF = ()["tr"]:Find("icon_contaon/icon"):GetComponent(typeof(Image)),
		starsTF = ()["tr"]:Find("icon_contaon/stars"),
		starTF = ()["tr"]:Find("icon_contaon/stars/star"),
		btn = ()["tr"]:Find("occupy_btn"),
		update = function (slot0, slot1)
			slot0.player = slot1
			slot0.name.text = slot1.name
			slot0.level.text = slot1.level
			slot0.manifesto.text = slot1.manifesto

			LoadSpriteAsync("qicon/" .. slot1:getPainting(), function (slot0)
				if not slot0 then
					slot0.iconTF.sprite = GetSpriteFromAtlas("heroicon/unknown", "")
				else
					slot0.iconTF.sprite = slot0
				end
			end)

			for slot7 = slot0.starsTF.childCount, pg.ship_data_statistics[slot1.icon].star - 1, 1 do
				cloneTplTo(slot0.starTF, slot0.starsTF)
			end

			for slot7 = 1, slot3, 1 do
				setActive(slot0.starsTF:GetChild(slot7 - 1), slot7 <= slot2.star)
			end
		end
	}
end

slot0.initBlackListItem = function (slot0, slot1)
	onButton(slot0, slot0:createBlackItem(slot1).btn, function ()
		pg.MsgboxMgr.GetInstance():ShowMsgBox({
			content = i18n("firend_relieve_blacklist_tip", slot0.player.name),
			onYes = function ()
				slot0:emit(FriendMediator.RELIEVE_BLACKLIST, slot1.player.id)
			end
		})
	end)

	slot0.blackItems[slot1] = slot0.createBlackItem(slot1)
end

slot0.updateBlackListItem = function (slot0, slot1, slot2)
	if not slot0.blackItems[slot2] then
		slot0:initBlackListItem(slot2)

		slot3 = slot0.blackItems[slot2]
	end

	slot3:update(slot0.blackVOs[slot1 + 1])
end

slot0.deleteBlackVO = function (slot0, slot1)
	for slot5, slot6 in ipairs(slot0.blackVOs) do
		if slot6.id == slot1 then
			table.remove(slot0.blackVOs, slot5)

			break
		end
	end

	slot0:sortBlackList()
end

slot0.sortBlackList = function (slot0)
	if not slot0.isInitBlackList then
		return
	end

	table.sort(slot0.blackVOs, function (slot0, slot1)
		return slot0.id < slot1.id
	end)

	slot0.backListCount.text = #slot0.blackVOs .. "/" .. MAX_BLACKLIST_COUNT

	slot0.blackRect:SetTotalCount(#slot0.blackVOs, -1)
end

slot0.updateChatNotification = function (slot0, slot1)
	setActive(slot0.chatTipContainer, slot1 > 0)

	slot0.chatTip.text = slot1
end

slot0.willExit = function (slot0)
	if slot0.tweens then
		cancelTweens(slot0.tweens)
	end

	setActive(slot0.addPanel, true)
	setActive(slot0.requestPanel, true)
	setActive(slot0.friendPanel, true)
end

return slot0
